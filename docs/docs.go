// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://swagger.io/terms/",
        "contact": {
            "name": "JingYiJun",
            "url": "https://www.jingyijun.xyz",
            "email": "jingyijun3104@outlook.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/balances": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "List balances",
                "parameters": [
                    {
                        "type": "string",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "created_at",
                            "user_id",
                            "change"
                        ],
                        "type": "string",
                        "default": "id",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "true: positive, false: negative, nil: all",
                        "name": "positive",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "asc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.BalanceListResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Create a balance",
                "parameters": [
                    {
                        "description": "body",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.BalanceCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/apis.BalanceResponse"
                        }
                    }
                }
            }
        },
        "/balances/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Get a balance by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.BalanceResponse"
                        }
                    }
                }
            }
        },
        "/books": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "List books",
                "parameters": [
                    {
                        "type": "string",
                        "name": "author",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "isbn",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "on_sale",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "isbn",
                            "updated_at",
                            "created_at",
                            "title",
                            "author",
                            "press",
                            "published_date",
                            "price",
                            "stock"
                        ],
                        "type": "string",
                        "default": "id",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "press",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "asc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.BookListResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Create a book",
                "parameters": [
                    {
                        "description": "body",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.BookCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/apis.BookResponse"
                        }
                    }
                }
            }
        },
        "/books/{id}": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Modify a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.BookModifyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.BookResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "body",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/purchases": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "summary": "List purchases",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "book_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "created_at",
                            "updated_at",
                            "book_id",
                            "user_id"
                        ],
                        "type": "string",
                        "default": "id",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "asc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.PurchaseListResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "summary": "Create a purchase",
                "parameters": [
                    {
                        "description": "body",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.PurchaseCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/apis.PurchaseResponse"
                        }
                    }
                }
            }
        },
        "/purchases/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "summary": "Get a purchase by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.PurchaseResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Modify the quantity or price of a purchase by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "summary": "Modify a purchase",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.PurchaseModifyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.PurchaseResponse"
                        }
                    }
                }
            }
        },
        "/purchases/{id}/_arrive": {
            "post": {
                "description": "Arrive a purchase by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "summary": "Arrive a purchase",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.PurchaseResponse"
                        }
                    }
                }
            }
        },
        "/purchases/{id}/_pay": {
            "post": {
                "description": "Pay a purchase by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "summary": "Pay a purchase",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.PurchaseResponse"
                        }
                    }
                }
            }
        },
        "/purchases/{id}/_return": {
            "post": {
                "description": "Return a purchase by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchase"
                ],
                "summary": "Return a purchase",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.PurchaseResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Register, admin only",
                "parameters": [
                    {
                        "description": "body",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/sales": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sale"
                ],
                "summary": "List sales",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "book_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "created_at",
                            "updated_at",
                            "book_id",
                            "user_id"
                        ],
                        "type": "string",
                        "default": "id",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "asc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SaleListResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sale"
                ],
                "summary": "Create a sale",
                "parameters": [
                    {
                        "description": "body",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.SaleCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/apis.SaleResponse"
                        }
                    }
                }
            }
        },
        "/sales/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sale"
                ],
                "summary": "Get a sale by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SaleResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "list users, admin only",
                "parameters": [
                    {
                        "enum": [
                            "id",
                            "username",
                            "staff_id",
                            "register_time",
                            "last_login"
                        ],
                        "type": "string",
                        "default": "id",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "asc",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.UserListResponse"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "delete self",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "modify current user",
                "parameters": [
                    {
                        "description": "body",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.UserModifyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "get a user by id/username/staff_id, admin only",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "delete a user by id, admin only",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "modify a user by id, admin only",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.UserModifyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apis.BalanceCreateRequest": {
            "type": "object",
            "required": [
                "change"
            ],
            "properties": {
                "change": {
                    "type": "number"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "apis.BalanceListResponse": {
            "type": "object",
            "properties": {
                "balances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.BalanceResponse"
                    }
                },
                "page_total": {
                    "type": "integer"
                }
            }
        },
        "apis.BalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "change": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "info": {
                    "type": "string"
                },
                "operation_id": {
                    "type": "integer"
                },
                "operation_type": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "apis.BookCreateRequest": {
            "type": "object",
            "required": [
                "author",
                "isbn",
                "press",
                "title"
            ],
            "properties": {
                "author": {
                    "type": "string",
                    "minLength": 1
                },
                "cover": {
                    "description": "cover url or base64, null if not set",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isbn": {
                    "type": "string",
                    "minLength": 1
                },
                "on_sale": {
                    "type": "boolean",
                    "default": false
                },
                "press": {
                    "type": "string",
                    "minLength": 1
                },
                "price": {
                    "type": "number",
                    "minimum": 0
                },
                "published_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "apis.BookListResponse": {
            "type": "object",
            "properties": {
                "books": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.BookResponse"
                    }
                },
                "page_total": {
                    "type": "integer"
                }
            }
        },
        "apis.BookModifyRequest": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string",
                    "minLength": 1
                },
                "cover": {
                    "description": "cover url or base64, null if not set",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "on_sale": {
                    "type": "boolean"
                },
                "press": {
                    "type": "string",
                    "minLength": 1
                },
                "price": {
                    "type": "number",
                    "minimum": 0
                },
                "published_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "apis.BookResponse": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "cover": {
                    "description": "cover url or base64, null if not set",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isbn": {
                    "type": "string"
                },
                "on_sale": {
                    "type": "boolean"
                },
                "press": {
                    "type": "string"
                },
                "price": {
                    "description": "单价, 用 int 表示以分为单位，避免浮点数精度问题",
                    "type": "number"
                },
                "published_date": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "description": "user who create the book",
                    "type": "integer"
                }
            }
        },
        "apis.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "apis.PurchaseCreateRequest": {
            "type": "object",
            "required": [
                "book_id",
                "price",
                "quantity"
            ],
            "properties": {
                "book_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "price": {
                    "type": "number",
                    "minimum": 0
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "apis.PurchaseListResponse": {
            "type": "object",
            "properties": {
                "page_total": {
                    "type": "integer"
                },
                "purchases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.PurchaseResponse"
                    }
                }
            }
        },
        "apis.PurchaseModifyRequest": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "minimum": 0
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "apis.PurchaseResponse": {
            "type": "object",
            "properties": {
                "arrived": {
                    "type": "boolean"
                },
                "book": {
                    "$ref": "#/definitions/apis.BookResponse"
                },
                "book_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "paid": {
                    "type": "boolean"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "returned": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "apis.RegisterRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean",
                    "default": false
                },
                "password": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 8
                },
                "real_name": {
                    "type": "string"
                },
                "staff_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "apis.SaleCreateRequest": {
            "type": "object",
            "required": [
                "book_id",
                "quantity"
            ],
            "properties": {
                "book_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "apis.SaleListResponse": {
            "type": "object",
            "properties": {
                "page_total": {
                    "type": "integer"
                },
                "sales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.SaleResponse"
                    }
                }
            }
        },
        "apis.SaleResponse": {
            "type": "object",
            "properties": {
                "book_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "apis.UserListResponse": {
            "type": "object",
            "properties": {
                "page_total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.UserResponse"
                    }
                }
            }
        },
        "apis.UserModifyRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean",
                    "default": false
                },
                "password": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 8
                },
                "real_name": {
                    "type": "string"
                },
                "staff_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "apis.UserResponse": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_admin": {
                    "type": "boolean",
                    "default": false
                },
                "last_login": {
                    "type": "string"
                },
                "real_name": {
                    "type": "string"
                },
                "register_time": {
                    "type": "string"
                },
                "staff_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "last_login": {
                    "type": "string"
                },
                "real_name": {
                    "type": "string"
                },
                "register_time": {
                    "type": "string"
                },
                "staff_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "localhost:8000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Book Management System Backend",
	Description:      "This is a Book Management System backend for Fudan 2023 midterm Project of Database course.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
